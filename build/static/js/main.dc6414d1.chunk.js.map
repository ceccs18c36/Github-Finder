{"version":3,"sources":["components/layout/Spinner.gif","components/layout/Navbar.js","components/layout/Spinner.js","components/Repos/RepoItem.js","components/Repos/Repo.js","context/github/githubContext.js","components/Users/User.js","components/pages/About.js","context/alert/alertContext.js","components/Users/Search.js","components/layout/Alert.js","components/Users/UserCard.js","components/Users/Users.js","components/pages/Home.js","components/pages/NotFound.js","context/github/githubReducer.js","context/types.js","context/github/GithubState.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","Spinner","src","spinner","alt","style","width","margin","display","RepoItem","repo","href","html_url","name","Repo","repos","map","key","id","GithubContext","createContext","User","match","useContext","getUser","getRepo","user","loading","useEffect","params","login","hireable","avatar_url","blog","company","location","bio","public_gists","public_repos","followers","following","target","About","props","AlertContext","Search","findUsers","clearUsers","users","setAlert","useState","setName","onSubmit","e","preventDefault","type","placeholder","value","onChange","length","onClick","Alert","alert","msg","UserCard","username","avatar","Userstyle","gridTemplateColumns","gridGap","Users","Home","NotFound","state","action","payload","GithubState","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","res","data","items","REACT_APP_CLIENT_ID","REACT_APP_CLIENT_SECRET","Provider","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,qC,yKCIrCC,EAAS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACpB,OACI,yBAAKC,UAAU,kBACX,4BACI,uBAAGA,UAAWF,IADlB,YAEUC,IAEV,4BACI,4BACI,kBAAC,IAAD,CAAME,GAAG,KAAT,SAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,UAAT,aAOpBJ,EAAOK,aAAe,CAClBH,MAAO,gBACPD,KAAM,gBAQKD,Q,iBClBAM,EAZC,WACd,OACE,kBAAC,WAAD,KACE,yBACEC,IAAKC,IACLC,IAAI,aACJC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,QAAS,aCQ1CC,EAdE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,yBAAKZ,UAAU,QACb,4BACE,uBAAGa,KAAMD,EAAKE,UAAWF,EAAKG,SCIvBC,EAPF,SAAC,GACZ,OAD0B,EAAZC,MACDC,KAAI,SAACN,GAAD,OAAU,kBAAC,EAAD,CAAUA,KAAMA,EAAMO,IAAKP,EAAKQ,SCD9CC,EAFOC,0BCwGPC,EAlGF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACyBC,qBAAWJ,GAAtDK,EADkB,EAClBA,QAASC,EADS,EACTA,QAASC,EADA,EACAA,KAAMX,EADN,EACMA,MAAOY,EADb,EACaA,QACvCC,qBAAU,WACRJ,EAAQF,EAAMO,OAAOC,OACrBL,EAAQH,EAAMO,OAAOC,SAEpB,IANuB,IASxBC,EAYEL,EAZFK,SACAC,EAWEN,EAXFM,WACApB,EAUEc,EAVFd,SACAqB,EASEP,EATFO,KACAH,EAQEJ,EARFI,MACAI,EAOER,EAPFQ,QACAC,EAMET,EANFS,SACAC,EAKEV,EALFU,IACAC,EAIEX,EAJFW,aACAC,EAGEZ,EAHFY,aACAC,EAEEb,EAFFa,UACAC,EACEd,EADFc,UAGF,OAAIb,EAAgB,kBAAC,EAAD,MAElB,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAM5B,GAAG,IAAID,UAAU,iBACrB,uBAAGA,UAAU,4BADf,mBADF,YAIY,IACTiC,EACC,uBAAGjC,UAAU,6BAEb,uBAAGA,UAAU,6BAEf,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEI,IAAK8B,EACL5B,IAAI,SACJN,UAAU,YACVO,MAAO,CAAEC,MAAO,WAElB,4BAAKwB,GACJK,GAAY,yCAAeA,IAE9B,6BACGC,GACC,kBAAC,WAAD,KACE,oCACA,2BAAIA,IAGR,uBAAGzB,KAAMC,EAAUd,UAAU,oBAAoB2C,OAAO,SAAxD,mBAGA,4BACE,4BACGX,GACC,kBAAC,WAAD,KACE,6CADF,IAC8BA,IAIlC,4BACGG,GACC,kBAAC,WAAD,KACE,6CACCA,IAIP,4BACGC,GACC,kBAAC,WAAD,KACE,4CADF,IAC6BA,OAOvC,yBAAKpC,UAAU,oBACb,yBAAKA,UAAU,uBAAf,cAAiDyC,GACjD,yBAAKzC,UAAU,uBAAf,cAAiD0C,GACjD,yBAAK1C,UAAU,qBAAf,iBAAkDwC,GAClD,yBAAKxC,UAAU,oBAAf,iBAAiDuC,IAEnD,kBAAC,EAAD,CAAMtB,MAAOA,MCpFJ2B,EAVD,SAACC,GACX,OACI,6BACI,6CACA,6EACA,8C,QCHGC,EAFMxB,0BCyCNyB,EAvCA,WAAO,IAAD,EACsBtB,qBAAWJ,GAA5C2B,EADW,EACXA,UAAWC,EADA,EACAA,WAAYC,EADZ,EACYA,MACvBC,EAAa1B,qBAAWqB,GAAxBK,SAFW,EAGKC,mBAAS,IAHd,mBAGZrC,EAHY,KAGNsC,EAHM,KAcnB,OACE,0BAAMrD,UAAU,OAAOsD,SAVZ,SAACC,GACZA,EAAEC,iBACW,KAATzC,EACFoC,EAAS,6CAA8C,SAEvDH,EAAUjC,GACVsC,EAAQ,OAKR,2BACEI,KAAK,OACL1C,KAAK,OACL2C,YAAY,qBACZC,MAAO5C,EACP6C,SAAU,SAACL,GAAD,OAAOF,EAAQE,EAAEZ,OAAOgB,UAEpC,4BAAQF,KAAK,SAASzD,UAAU,0BAAhC,UAGCkD,EAAMW,OAAS,GACd,4BACE7D,UAAU,0BACVyD,KAAK,SACLK,QAASb,GAHX,WCjBOc,EAXD,WAAO,IACXC,EAAUvC,qBAAWqB,GAArBkB,MACR,OACY,OAAVA,GACE,yBAAKhE,UAAS,sBAAiBgE,EAAMP,OACnC,uBAAGzD,UAAU,sBADf,gBAC8CgE,EAAMC,OCiB3CC,EAtBE,SAAC,GAAuD,IAAD,IAApDtC,KAAeuC,EAAqC,EAA5CnC,MAA6BoC,EAAe,EAA3BlC,WACzC,OACI,yBAAKlC,UAAU,oBACX,yBACII,IAAKgE,EACL9D,IAAI,GACJN,UAAU,YACVO,MAAO,CAAEC,MAAO,UAEpB,4BAAK2D,GACL,6BACI,kBAAC,IAAD,CACIlE,GAAE,gBAAWkE,GACbnE,UAAU,4BAFd,WCOVqE,EAAY,CAChB3D,QAAS,OACT4D,oBAAqB,gBACrBC,QAAS,QAGIC,EAtBD,WAAO,IAAD,EACS/C,qBAAWJ,GAA9B6B,EADU,EACVA,MAER,OAHkB,EACHrB,QAGN,kBAAC,EAAD,MAGL,yBAAKtB,MAAO8D,GACTnB,EAAMhC,KAAI,SAACU,GAAD,OACT,kBAAC,EAAD,CAAUT,IAAKS,EAAKR,GAAIQ,KAAMA,SCDzB6C,EARF,SAAC5B,GAAD,OACX,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCEW6B,EATE,SAAC7B,GAChB,OACE,6BACE,yCACA,8C,gECGS,WAAC8B,EAAOC,GACrB,OAAQA,EAAOnB,MACb,ICLuB,cDMrB,OAAO,2BACFkB,GADL,IAEE9C,SAAS,IAEb,IChBsB,aDiBpB,OAAO,2BACF8C,GADL,IAEE9C,SAAS,EACTqB,MAAO0B,EAAOC,UAElB,ICrBoB,WDsBlB,OAAO,2BACFF,GADL,IAEE/C,KAAMgD,EAAOC,QACbhD,SAAS,IAEb,IC1BoB,WD2BlB,OAAO,2BACF8C,GADL,IAEE1D,MAAO2D,EAAOC,QACdhD,SAAS,IAEb,IC/BuB,cDgCrB,OAAO,2BACF8C,GADL,IAEEzB,MAAO,GACPrB,SAAS,IAEb,ICpCqB,YDqCnB,OAAO,2BACF8C,GADL,IAEEX,MAAOY,EAAOC,UAElB,QACE,OAAOF,IEiCEG,EAlEK,SAACjC,GACnB,IAD6B,EASHkC,qBAAWC,EARhB,CACnBpD,KAAM,GACNsB,MAAO,GACPrB,SAAS,EACTZ,MAAO,GACP+C,MAAO,OANoB,mBAStBW,EATsB,KASfM,EATe,KAYvBjC,EAAS,uCAAG,WAAOjC,GAAP,eAAAmE,EAAA,6DAChBC,IADgB,SAEEC,IAAMC,IAAN,gDACyBtE,EADzB,sBAC2CuE,mHAAYC,iBADvD,0BACyFD,mHAAYE,uBAHvG,OAEVC,EAFU,OAMhBR,EAAS,CAAExB,KD/BW,aC+BOoB,QAASY,EAAIC,KAAKC,QAN/B,2CAAH,sDAUTjE,EAAO,uCAAG,WAAOyC,GAAP,eAAAe,EAAA,6DACdC,IADc,SAEIC,IAAMC,IAAN,uCACgBlB,EADhB,sBACsCmB,mHAAYC,iBADlD,0BACoFD,mHAAYE,uBAHpG,OAERC,EAFQ,OAMdR,EAAS,CAAExB,KDxCS,WCwCOoB,QAASY,EAAIC,OAN1B,2CAAH,sDAUP/D,EAAO,uCAAG,WAAOwC,GAAP,eAAAe,EAAA,6DACdC,IADc,SAEIC,IAAMC,IAAN,uCACgBlB,EADhB,wDACwEmB,mHAAYM,oBADpF,0BACyHN,mHAAYO,0BAHzI,OAERJ,EAFQ,OAKdR,EAAS,CAAExB,KDhDS,WCgDOoB,QAASY,EAAIC,OAL1B,2CAAH,sDAYPP,EAAa,WACjBF,EAAS,CAAExB,KDpDY,iBCuDzB,OACE,kBAAC,EAAcqC,SAAf,CACEnC,MAAO,CACL/B,KAAM+C,EAAM/C,KACZsB,MAAOyB,EAAMzB,MACbrB,QAAS8C,EAAM9C,QACfZ,MAAO0D,EAAM1D,MACb+B,YACAtB,UACAC,UACAsB,WAjBa,kBAAMgC,EAAS,CAAExB,KDnDX,mBCuEpBZ,EAAMkD,WCxEE,WAACpB,EAAOC,GACrB,OAAQA,EAAOnB,MACb,IFAqB,YECnB,OAAOmB,EAAOC,QAChB,IFDwB,eEEtB,OAAO,KACT,QACE,OAAOF,ICiBEqB,EApBI,SAACnD,GAClB,IAD4B,EAGFkC,qBAAWkB,EAFhB,MADO,mBAGrBtB,EAHqB,KAGdM,EAHc,KAS5B,OACE,kBAAC,EAAaa,SAAd,CACEnC,MAAO,CACLK,MAAOW,EACPxB,SARW,SAACc,EAAKR,GACrBwB,EAAS,CAAExB,KHRU,YGQOoB,QAAS,CAAEZ,MAAKR,UAC5CyC,YAAW,kBAAMjB,EAAS,CAAExB,KHRJ,mBGQ2B,QAShDZ,EAAMkD,WCYEI,EAtBH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKnG,UAAU,OACb,kBAAC,EAAD,CAAQD,MAAM,gBAAgBD,KAAK,iBACnC,yBAAKE,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,IAAIC,UAAW7B,IACjC,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,SAASC,UAAW1D,IACtC,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,eAAeC,UAAW/E,IAC5C,kBAAC,IAAD,CAAO+E,UAAW5B,WCnBlC6B,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.dc6414d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spinner.584b607f.gif\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = ({ icon, title }) => {\n    return (\n        <nav className='navbar bg-dark'>\n            <h1>\n                <i className={icon} />\n                {`  ${title}`}\n            </h1>\n            <ul>\n                <li>\n                    <Link to='/'>Home</Link>\n                </li>\n                <li>\n                    <Link to='/about'>About</Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nNavbar.defaultProps = {\n    title: 'Github Finder',\n    icon: 'fa fa-github',\n};\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n};\n\nexport default Navbar;\n","import React, { Fragment } from \"react\";\nimport spinner from \"./Spinner.gif\";\n\nconst Spinner = () => {\n  return (\n    <Fragment>\n      <img\n        src={spinner}\n        alt=\"Loading...\"\n        style={{ width: \"60px\", margin: \"auto\", display: \"block\" }}\n      />\n    </Fragment>\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RepoItem = ({ repo }) => {\n  return (\n    <div className='card'>\n      <h3>\n        <a href={repo.html_url}>{repo.name}</a>\n      </h3>\n    </div>\n  );\n};\n\nRepoItem.propTypes = {\n  repo: PropTypes.object.isRequired,\n};\n\nexport default RepoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RepoItem from './RepoItem';\n\nconst Repo = ({ repos }) => {\n  return repos.map((repo) => <RepoItem repo={repo} key={repo.id} />);\n};\n\nRepo.propTypes = {\n  repos: PropTypes.array.isRequired,\n};\nexport default Repo;\n","import { createContext } from \"react\";\n\nconst GithubContext = createContext();\n\nexport default GithubContext;\n","import React, { useEffect, Fragment, useContext } from \"react\";\nimport Spinner from \"../layout/Spinner\";\nimport Repo from \"../Repos/Repo\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport GithubContext from \"../../context/github/githubContext\";\n\nconst User = ({ match }) => {\n  const { getUser, getRepo, user, repos, loading } = useContext(GithubContext);\n  useEffect(() => {\n    getUser(match.params.login);\n    getRepo(match.params.login);\n    //eslint-disable-next-line\n  }, []);\n\n  const {\n    hireable,\n    avatar_url,\n    html_url,\n    blog,\n    login,\n    company,\n    location,\n    bio,\n    public_gists,\n    public_repos,\n    followers,\n    following,\n  } = user;\n\n  if (loading) return <Spinner />;\n  return (\n    <Fragment>\n      <Link to=\"/\" className=\"btn btn-light\">\n        <i className=\"fa fa-arrow-circle-left\"></i> Back to Search\n      </Link>\n      Hireable:{\" \"}\n      {hireable ? (\n        <i className=\"fa fa-check text-success\"></i>\n      ) : (\n        <i className=\"fa fa-times text-danger \"></i>\n      )}\n      <div className=\"card grid-2\">\n        <div className=\"all-center\">\n          <img\n            src={avatar_url}\n            alt=\"Avatar\"\n            className=\"round-img\"\n            style={{ width: \"150px\" }}\n          />\n          <h3>{login}</h3>\n          {location && <p>Location:: {location}</p>}\n        </div>\n        <div>\n          {bio && (\n            <Fragment>\n              <h3>Bio:</h3>\n              <p>{bio}</p>\n            </Fragment>\n          )}\n          <a href={html_url} className=\"btn btn-dark my-1\" target=\"blank\">\n            Visit on Github\n          </a>\n          <ul>\n            <li>\n              {login && (\n                <Fragment>\n                  <strong>Username:</strong> {login}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {blog && (\n                <Fragment>\n                  <strong>Website: </strong>\n                  {blog}\n                </Fragment>\n              )}\n            </li>\n            <li>\n              {company && (\n                <Fragment>\n                  <strong>Company:</strong> {company}\n                </Fragment>\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"card text-center\">\n        <div className=\"badge badge-primary\">Followers: {followers}</div>\n        <div className=\"badge badge-success\">Following: {following}</div>\n        <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\n        <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\n      </div>\n      <Repo repos={repos} />\n    </Fragment>\n  );\n};\n\nUser.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n};\nexport default User;\n","import React from 'react';\n\nconst About = (props) => {\n    return (\n        <div>\n            <h1>Github Finder</h1>\n            <p>An App to fetch the details of Github Profiles</p>\n            <p>Version 1.0.0</p>\n        </div>\n    );\n};\n\nexport default About;\n","import { createContext } from \"react\";\n\nconst AlertContext = createContext();\n\nexport default AlertContext;\n","import React, { useState, useContext } from \"react\";\nimport GithubContext from \"../../context/github/githubContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst Search = () => {\n  const { findUsers, clearUsers, users } = useContext(GithubContext);\n  const { setAlert } = useContext(AlertContext);\n  const [name, setName] = useState(\"\");\n\n  const find = (e) => {\n    e.preventDefault();\n    if (name === \"\") {\n      setAlert(\"Please Enter the username before searching\", \"info\");\n    } else {\n      findUsers(name);\n      setName(\"\");\n    }\n  };\n  return (\n    <form className=\"form\" onSubmit={find}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter the username\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <button type=\"submit\" className=\"btn btn-dark btn-block\">\n        Search\n      </button>\n      {users.length > 0 && (\n        <button\n          className=\"btn btn-clear btn-block\"\n          type=\"submit\"\n          onClick={clearUsers}\n        >\n          Clear\n        </button>\n      )}\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst Alert = () => {\n  const { alert } = useContext(AlertContext);\n  return (\n    alert !== null && (\n      <div className={`alert alert-${alert.type}`}>\n        <i className=\"fa fa-info circle\"></i> {`  ${alert.msg}`}\n      </div>\n    )\n  );\n};\n\nexport default Alert;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst UserCard = ({ user: { login: username, avatar_url: avatar } }) => {\n    return (\n        <div className='card text-center'>\n            <img\n                src={avatar}\n                alt=''\n                className='round-img'\n                style={{ width: '60px' }}\n            />\n            <h1>{username}</h1>\n            <div>\n                <Link\n                    to={`/user/${username}`}\n                    className='btn btn-dark btn-sm my-1'\n                >\n                    More\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default UserCard;\n","import React, { useContext } from \"react\";\nimport UserCard from \"./UserCard\";\nimport Spinner from \"../layout/Spinner\";\nimport GithubContext from \"../../context/github/githubContext\";\n\nconst Users = () => {\n  const { users, loading } = useContext(GithubContext);\n\n  if (loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <div style={Userstyle}>\n        {users.map((user) => (\n          <UserCard key={user.id} user={user} />\n        ))}\n      </div>\n    );\n  }\n};\n\nconst Userstyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3,1fr)\",\n  gridGap: \"1rem\",\n};\n\nexport default Users;\n","import React, { Fragment } from \"react\";\nimport Search from \"../Users/Search\";\nimport Alert from \"../layout/Alert\";\nimport Users from \"../Users/Users\";\n\nconst Home = (props) => (\n  <Fragment>\n    <Alert />\n    <Search />\n    <Users />\n  </Fragment>\n);\n\nexport default Home;\n","import React from \"react\";\n\nconst NotFound = (props) => {\n  return (\n    <div>\n      <h1>Error 404</h1>\n      <p>You hit a 404</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import {\n  CLEAR_USERS,\n  FIND_USERS,\n  GET_REPO,\n  GET_USER,\n  SET_ALERT,\n  SET_LOADING,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FIND_USERS:\n      return {\n        ...state,\n        loading: false,\n        users: action.payload,\n      };\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    case GET_REPO:\n      return {\n        ...state,\n        repos: action.payload,\n        loading: false,\n      };\n    case CLEAR_USERS:\n      return {\n        ...state,\n        users: [],\n        loading: false,\n      };\n    case SET_ALERT:\n      return {\n        ...state,\n        alert: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const FIND_USERS = \"FIND_USERS\";\nexport const GET_USER = \"GET_USER\";\nexport const GET_REPO = \"GET_REPO\";\nexport const CLEAR_USERS = \"CLEAR_USERS\";\nexport const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const SET_LOADING = \"SET_LOADING\";\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport GithubContext from \"./githubContext\";\nimport GithubReducer from \"./githubReducer\";\n\nimport {\n  CLEAR_USERS,\n  FIND_USERS,\n  GET_REPO,\n  GET_USER,\n  SET_LOADING,\n} from \"../types\";\n\nconst GithubState = (props) => {\n  const initialstate = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: [],\n    alert: null,\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialstate);\n\n  // Search user\n  const findUsers = async (name) => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${name}&client_id=${process.env.GITHUB_CLIENT_ID}&client_secret=${process.env.GITHUB_CLIENT_SECRET}`\n    );\n\n    dispatch({ type: FIND_USERS, payload: res.data.items });\n  };\n\n  //Fetching User details\n  const getUser = async (username) => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${process.env.GITHUB_CLIENT_ID}&client_secret=${process.env.GITHUB_CLIENT_SECRET}`\n    );\n\n    dispatch({ type: GET_USER, payload: res.data });\n  };\n\n  //Featching User repo details\n  const getRepo = async (username) => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_CLIENT_ID}&client_secret=${process.env.REACT_APP_CLIENT_SECRET}`\n    );\n    dispatch({ type: GET_REPO, payload: res.data });\n  };\n\n  // Clear Users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  // Set Loading\n  const setLoading = () => {\n    dispatch({ type: SET_LOADING });\n  };\n\n  return (\n    <GithubContext.Provider\n      value={{\n        user: state.user,\n        users: state.users,\n        loading: state.loading,\n        repos: state.repos,\n        findUsers,\n        getUser,\n        getRepo,\n        clearUsers,\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return action.payload;\n    case REMOVE_ALERT:\n      return null;\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport AlertContext from \"./alertContext\";\nimport AlertReducer from \"./alertReducer\";\n\nimport { SET_ALERT, REMOVE_ALERT } from \"../types\";\n\nconst AlertState = (props) => {\n  const initialstate = null;\n\n  const [state, dispatch] = useReducer(AlertReducer, initialstate);\n  //SetAlert\n  const setAlert = (msg, type) => {\n    dispatch({ type: SET_ALERT, payload: { msg, type } });\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\n  };\n  return (\n    <AlertContext.Provider\n      value={{\n        alert: state,\n        setAlert,\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\nexport default AlertState;\n","import React from \"react\";\nimport Navbar from \"./components/layout/Navbar\";\nimport User from \"./components/Users/User\";\nimport About from \"./components/pages/About\";\nimport Home from \"./components/pages/Home\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport GithubState from \"./context/github/GithubState\";\nimport AlertState from \"./context/alert/AlertState\";\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className=\"App\">\n            <Navbar title=\"Github Finder\" icon=\"fa fa-github\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/user/:login\" component={User} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}